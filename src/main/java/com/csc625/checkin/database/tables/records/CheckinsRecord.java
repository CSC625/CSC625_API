/*
 * This file is generated by jOOQ.
*/
package com.csc625.checkin.database.tables.records;


import com.csc625.checkin.database.tables.Checkins;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CheckinsRecord extends UpdatableRecordImpl<CheckinsRecord> implements Record3<Integer, Integer, Date> {

    private static final long serialVersionUID = 1376953516;

    /**
     * Setter for <code>checkin.checkins.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>checkin.checkins.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>checkin.checkins.Student_ID</code>.
     */
    public void setStudentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>checkin.checkins.Student_ID</code>.
     */
    public Integer getStudentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>checkin.checkins.Check_In_Date</code>.
     */
    public void setCheckInDate(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>checkin.checkins.Check_In_Date</code>.
     */
    public Date getCheckInDate() {
        return (Date) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Date> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Date> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Checkins.CHECKINS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Checkins.CHECKINS.STUDENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return Checkins.CHECKINS.CHECK_IN_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component3() {
        return getCheckInDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getStudentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getCheckInDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckinsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckinsRecord value2(Integer value) {
        setStudentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckinsRecord value3(Date value) {
        setCheckInDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CheckinsRecord values(Integer value1, Integer value2, Date value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CheckinsRecord
     */
    public CheckinsRecord() {
        super(Checkins.CHECKINS);
    }

    /**
     * Create a detached, initialised CheckinsRecord
     */
    public CheckinsRecord(Integer id, Integer studentId, Date checkInDate) {
        super(Checkins.CHECKINS);

        set(0, id);
        set(1, studentId);
        set(2, checkInDate);
    }
}
